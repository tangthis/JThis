<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"   
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
      xmlns:aop="http://www.springframework.org/schema/aop"        
      xmlns:tx="http://www.springframework.org/schema/tx"       
      xmlns:context="http://www.springframework.org/schema/context"  
      xmlns:cache="http://www.springframework.org/schema/cache" 
      xmlns:p="http://www.springframework.org/schema/p"     
      xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd 
      http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd        
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd             
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd         
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"> 
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="properties" ref="applicationProperties" />
	</bean>
	<!-- 应用属性文件读入 -->
	<bean id="applicationProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>
					classpath*:web-conf.properties
				</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  
        destroy-method="close">  
        <property name="url" value="${db.url}" />  
        <property name="username" value="${db.username}" />  
        <property name="password" value="${db.password}" />  
        <property name="driverClassName" value="${db.driverClassName}" />  
        <property name="filters" value="${db.filters}" />  
        <property name="maxActive" value="${db.maxActive}" />  
        <property name="initialSize" value="${db.initialSize}" />  
        <property name="maxWait" value="${db.maxWait}" />  
        <property name="minIdle" value="${db.minIdle}" />  
        <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />  
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />  
<!--         <property name="validationQuery" value="${db.validationQuery}" />   -->
<!--         <property name="testWhileIdle" value="${db.testWhileIdle}" />   -->
<!--         <property name="testOnBorrow" value="${db.testOnBorrow}" />   -->
<!--         <property name="testOnReturn" value="${db.testOnReturn}" />   -->
<!--         <property name="maxOpenPreparedStatements" value="${db.maxOpenPreparedStatements}" />   -->
        <property name="removeAbandoned" value="${db.removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->  
        <property name="removeAbandonedTimeout" value="${db.removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->  
<!--         <property name="logAbandoned" value="${db.logAbandoned}" /> 关闭abanded连接时输出错误日志   -->
    </bean>
    
    <bean id="tranMgr" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="tranMgr" proxy-target-class="true" />
    
    <tx:advice id="txAdvice" transaction-manager="tranMgr">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<tx:annotation-driven transaction-manager="tranMgr"/>  
	<aop:config>
		<aop:pointcut id="serviceOperation" expression="(execution(* com.tang.service.*.*(..)))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>
	
 	
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置, 多个以逗号或者分号隔开 -->
		<property name="typeAliasesPackage" value="com.tang.web.po" />
		<property name="mapperLocations" value="classpath:/mapper/*.xml" />
	</bean>
	
	<!-- 扫描basePackage下所有接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
		<property name="basePackage" value="com.tang.web.dao" />
	</bean>
	
	<!-- Cache配置 -->
    <cache:annotation-driven cache-manager="cacheManager"/>
    <bean id="ehCacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          p:configLocation="classpath:ehcache.xml"/>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
          p:cacheManager-ref="ehCacheManagerFactory"/>

</beans>